{"meta":{"title":"MoonyPoet","subtitle":"Live, for a life","description":null,"author":"MoonyPoet","url":"http://moonypoet.github.io"},"pages":[{"title":"about","date":"2017-06-14T03:02:19.000Z","updated":"2017-06-14T03:02:19.179Z","comments":true,"path":"about/index.html","permalink":"http://moonypoet.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"'Diary-001'","slug":"Diary-001","date":"2018-08-10T02:34:47.000Z","updated":"2018-08-10T02:58:23.563Z","comments":true,"path":"2018/08/10/Diary-001/","link":"","permalink":"http://moonypoet.github.io/2018/08/10/Diary-001/","excerpt":"","text":"言 羁绊 || 束缚 日本語お土産(みやげ)どういたしましてタイ何時ですがこちらこそ","categories":[{"name":"DIARY","slug":"DIARY","permalink":"http://moonypoet.github.io/categories/DIARY/"}],"tags":[{"name":"diary","slug":"diary","permalink":"http://moonypoet.github.io/tags/diary/"}]},{"title":"ES6学习笔记（三）","slug":"ECMAScript6StudyNotes-03","date":"2017-07-17T01:09:00.000Z","updated":"2017-07-17T03:39:20.707Z","comments":true,"path":"2017/07/17/ECMAScript6StudyNotes-03/","link":"","permalink":"http://moonypoet.github.io/2017/07/17/ECMAScript6StudyNotes-03/","excerpt":"","text":"笔记部分节选自如下书籍书名：《ECMAScript 6 入门》 作者：阮一锋 言 我用一生手绘红尘只因你要的四季风华 数组的结构赋值123456789101112131415161718192021222324252627let [a, b, c] = [1, 2, 3]let [a, ...b] = [1, 2, 3]a // 1b // [2, 3]let [a, b, ...c] = ['a']a // \"a\"b // undefinedc // []let [a, [b], d] = [1, [2, 3], 4]a // 1b // 2d // 4//指定默认值let [x, y = 'b'] = ['a']// x='a', y='b'//如果默认值是一个表达式，那么这个表达式是惰性求值的，即只有在用到的时候，才会求值。function f() &#123; //这里不会执行 console.log('aaa');&#125;let [x = f()] = [1]; 对象的解构赋值12345678910111213141516171819let &#123; bar, foo &#125; = &#123; foo: \"aaa\", bar: \"bbb\" &#125;;foo // \"aaa\"bar // \"bbb\"let &#123; baz &#125; = &#123; foo: \"aaa\", bar: \"bbb\" &#125;;baz // undefined//对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。let &#123; foo: baz &#125; = &#123; foo: \"aaa\", bar: \"bbb\" &#125;;baz // \"aaa\"foo // error: foo is not defined//JavaScript 引擎会将&#123;x&#125;理解成一个代码块，从而发生语法错误。只有不将大括号写在行首，避免 JavaScript 将其解释为代码块。// 正确的写法let x;(&#123;x&#125; = &#123;x: 1&#125;);//将Math对象的对数、正弦、余弦三个方法，赋值到对应的变量上，使用起来就会方便很多。let &#123; log, sin, cos &#125; = Math; 字符串的解构赋值123456789const [a, b, c, d, e] = 'hello';a // \"h\"b // \"e\"c // \"l\"d // \"l\"e // \"o\"let &#123;length : len&#125; = 'hello';len // 5 函数参数的解构赋值123456789101112131415161718[[1, 2], [3, 4]].map(([a, b]) =&gt; a + b);// [ 3, 7 ]function move(&#123;x = 0, y = 0&#125; = &#123;&#125;) &#123; return [x, y];&#125;move(&#123;x: 3, y: 8&#125;); // [3, 8]move(&#123;x: 3&#125;); // [3, 0]move(&#123;&#125;); // [0, 0]move(); // [0, 0]function move(&#123;x, y&#125; = &#123; x: 0, y: 0 &#125;) &#123; return [x, y];&#125;move(&#123;x: 3, y: 8&#125;); // [3, 8]move(&#123;x: 3&#125;); // [3, undefined]move(&#123;&#125;); // [undefined, undefined]move(); // [0, 0]","categories":[{"name":"摸爬滚打","slug":"摸爬滚打","permalink":"http://moonypoet.github.io/categories/摸爬滚打/"}],"tags":[{"name":"ECMAScript6","slug":"ECMAScript6","permalink":"http://moonypoet.github.io/tags/ECMAScript6/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://moonypoet.github.io/tags/JavaScript/"}]},{"title":"ES6学习笔记（二）","slug":"ECMAScript6StudyNotes-02","date":"2017-07-13T14:33:31.000Z","updated":"2017-07-17T03:39:25.201Z","comments":true,"path":"2017/07/13/ECMAScript6StudyNotes-02/","link":"","permalink":"http://moonypoet.github.io/2017/07/13/ECMAScript6StudyNotes-02/","excerpt":"","text":"笔记部分节选自如下书籍书名：《ECMAScript 6 入门》 作者：阮一锋 言 任你在全世界妖娆我只在花园里绽放 let 和 const 命令# for循环 JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量i时，就在上一轮循环的基础上进行计算。（这就是为什么每次重声明变量，还是会累加的原因） 另外，for循环还有一个特别之处，就是设置循环变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域。 栗子如下：1234567for (let i = 0; i &lt; 3; i++) &#123; let i = 'abc'; console.log(i);&#125;// abc// abc// abc # let 只在代码块内生效 不存在变量提升 不允许重复声明 # 块级作用域 无块作用域的情况：内层变量可能会覆盖外层变量。12345678910var tmp = new Date();function f() &#123; console.log(tmp); if (false) &#123; var tmp = 'hello world'; &#125;&#125;f(); // undefined 2017.07.16 更# do 表达式待试验 # const 初始化必赋值 不可改变值 块作用域内生效 # const值不可改变的本质 对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指针，const只能保证这个指针是固定的，至于它指向的数据结构是不是可变的，就完全不能控制了。 如果真的想将对象冻结，应该使用Object.freeze方法。12345678910const foo = Object.freeze(&#123;&#125;);// 常规模式时，下面一行不起作用；// 严格模式时，该行会报错foo.prop = 123;//以上只冻结对象，但对于对象的属性并无冻结效果。如：const foo = Object.freeze(&#123;a: 1&#125;);//foo的属性a是可以改变值的foo.a = 12; 冻结对象连同属性的方法如下：12345678var constantize = (obj) =&gt; &#123; Object.freeze(obj); Object.keys(obj).forEach( (key, i) =&gt; &#123; if ( typeof obj[key] === 'object' ) &#123; constantize( obj[key] ); &#125; &#125;);&#125;;","categories":[{"name":"摸爬滚打","slug":"摸爬滚打","permalink":"http://moonypoet.github.io/categories/摸爬滚打/"}],"tags":[{"name":"ECMAScript6","slug":"ECMAScript6","permalink":"http://moonypoet.github.io/tags/ECMAScript6/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://moonypoet.github.io/tags/JavaScript/"}]},{"title":"《送你一匹马》摘要式笔记","slug":"《送你一匹马》摘要式笔记","date":"2017-07-12T14:22:58.000Z","updated":"2017-07-17T03:42:18.179Z","comments":true,"path":"2017/07/12/《送你一匹马》摘要式笔记/","link":"","permalink":"http://moonypoet.github.io/2017/07/12/《送你一匹马》摘要式笔记/","excerpt":"","text":"书名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-《送你一匹马》作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;三毛出版社&nbsp;-&nbsp;北京十月文艺出版社# 爱马 并不执著于拥有一匹摸得着的骏马，那样就也只有一匹了，这个不够，有了真马，落了实相，不自由，反而怅然若失。 # 梦里不知身是客 这当然是欺人，却没有法子自欺。 好字触目，却不惊心。 # 野火烧不尽 一个好农夫，当田就在你面前的时候，你不能再去做梦。 那么有教无类吧，孩子，你的脸上，已经溅到了书本的花瓣，老师，再给你一朵花。 战国之后，才有春秋。 它是值得的，里面没有如果。 书，在生活行事为人上不用出来，便是白读。 春风化雨，谁有事春风？谁又是雨？ 学问，是一张渔网，一个结一个结，结出了捕鱼的工具。 但是急流勇退之前的持、守、进、执的坚持仍然有待时间的考验和自我价值的判断与选择。 17.07.13 更# 野火烧不尽 田在发芽了，守田的人，你能不能走？ 我不戴表，可是我知道已是什么时刻。 但是，当一个发愿做清道夫的人，难道怕衣服脏吗？ # 不觉碧山暮 但闻万壑松 琢磨，是痛的，我是一块棱棱角角的方砚台，一块好砚，在于它石质的坚美和它润磨出来的墨香，而不是被磨成一个圆球，任人把玩。 听蜀僧濬弹琴李白蜀僧抱绿绮，西下峨眉峰。为我一挥手，如听万壑松。客心洗流水，馀响入霜钟。不觉碧山暮，秋云暗几重。","categories":[{"name":"金屋玉颜","slug":"金屋玉颜","permalink":"http://moonypoet.github.io/categories/金屋玉颜/"}],"tags":[{"name":"三毛","slug":"三毛","permalink":"http://moonypoet.github.io/tags/三毛/"},{"name":"摘要式笔记","slug":"摘要式笔记","permalink":"http://moonypoet.github.io/tags/摘要式笔记/"}]},{"title":"ES6学习笔记（一）","slug":"ECMAScript6StudyNotes-01","date":"2017-06-29T14:29:44.000Z","updated":"2017-07-17T03:38:58.157Z","comments":true,"path":"2017/06/29/ECMAScript6StudyNotes-01/","link":"","permalink":"http://moonypoet.github.io/2017/06/29/ECMAScript6StudyNotes-01/","excerpt":"","text":"笔记部分节选自如下书籍书名：《ECMAScript 6 入门》 作者：阮一锋 言 还没能够亲吻你却连发梢，都已触摸不及 ECMAScript 2015 (6th Edition)是目前ECMAScript语言规范的标准。通常被称为”ES6”。而ECMAScript 2017 今年已经确定最终功能集。（如果回到两年前，谁要是再跟我提前端，我就跟谁急。呵，呵） JavaScript版本列表JavaScript更新BTW.Mozilla开发者网络真是个不错的东西 检验浏览器ES6支持情况的工具 你可以使用比较标准的站点查看支持情况:ECMAScript compatibility table 也可以使用傻瓜式的在线测试工具你的浏览器支持 ES6 吗？ - ES-Checker 根据傻瓜式分析，现阶段浏览器支持情况如下： 浏览器 支持率 不支持特性 Edge 40.15063.0.0 95% 模块的export命令/模板的import命令(厉害了，我的Edge) Firefox54.0 90% 尾调用优化数组的实例方法模块的export命令/模板的import命令 Chrome58.0.3029.96 90% 同上 IE11 10% 不予评论","categories":[{"name":"摸爬滚打","slug":"摸爬滚打","permalink":"http://moonypoet.github.io/categories/摸爬滚打/"}],"tags":[{"name":"ECMAScript6","slug":"ECMAScript6","permalink":"http://moonypoet.github.io/tags/ECMAScript6/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://moonypoet.github.io/tags/JavaScript/"}]},{"title":"从搬瓦工服务器到翻墙神器","slug":"260617-shadowsocks","date":"2017-06-26T15:50:36.000Z","updated":"2017-07-14T00:37:09.968Z","comments":true,"path":"2017/06/26/260617-shadowsocks/","link":"","permalink":"http://moonypoet.github.io/2017/06/26/260617-shadowsocks/","excerpt":"","text":"言 其实地上本没有墙人心复杂了，也便有了墙 首先你必须拥有一个VPS，建议上搬瓦工官网买个最便宜的VPS，如果你只是用来翻墙的话。 如果你买好了，那么进入你的services主页。 点击进入VPS控制面板，如下图： 点击Shadowsocks Server选项，并install。 install成功后，跳转至如下界面，记录下你的server port和server password（可更改）。 下载shadowsocks客户端,并安装。 编辑服务器，填入IP、第5步的port和password，并自定义一个代理端口，如23333。 启动shadowsocks，给你需要翻墙的应用设置代理，以火狐为例。选项-&gt;高级-&gt;网络-&gt;连接-&gt;设置手动配置代理，SOCKS主机：localhost，端口：23333。 恭喜你，你可以尽情去浪了~~~23333333","categories":[{"name":"奇技淫巧","slug":"奇技淫巧","permalink":"http://moonypoet.github.io/categories/奇技淫巧/"}],"tags":[{"name":"搬瓦工","slug":"搬瓦工","permalink":"http://moonypoet.github.io/tags/搬瓦工/"},{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"http://moonypoet.github.io/tags/Shadowsocks/"}]},{"title":"CentOS修改SSH端口后的scp与git","slug":"CentOS修改SSH端口后的scp与git","date":"2017-06-23T03:32:07.000Z","updated":"2017-07-14T00:35:52.891Z","comments":true,"path":"2017/06/23/CentOS修改SSH端口后的scp与git/","link":"","permalink":"http://moonypoet.github.io/2017/06/23/CentOS修改SSH端口后的scp与git/","excerpt":"","text":"言 让我们换个姿势相爱以那不为人所熟知的 CentOS默认的SSH端口一般为20，网上找的大部分案例也都是使用这个端口。但为了防止有些脚本恶意扫描，建议修改SSH端口，例如：23333。 那么接下来相对应的，scp与git命令也要带上特定的端口，才能正常使用。12#scp -P 23333 ~/.ssh/id_rsa.pub root@yourserviceIP:~/#git clone git@yourserviceIP:23333/home/git/gitosis-admin.git","categories":[{"name":"疑难杂症","slug":"疑难杂症","permalink":"http://moonypoet.github.io/categories/疑难杂症/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"http://moonypoet.github.io/tags/CentOS/"},{"name":"SSH","slug":"SSH","permalink":"http://moonypoet.github.io/tags/SSH/"}]},{"title":"myFirstPost","slug":"myFirstPost","date":"2017-06-06T14:20:02.000Z","updated":"2017-06-06T14:20:02.451Z","comments":true,"path":"2017/06/06/myFirstPost/","link":"","permalink":"http://moonypoet.github.io/2017/06/06/myFirstPost/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-06-06T13:04:48.793Z","updated":"2017-06-06T13:04:48.793Z","comments":true,"path":"2017/06/06/hello-world/","link":"","permalink":"http://moonypoet.github.io/2017/06/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}
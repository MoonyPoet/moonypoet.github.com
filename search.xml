<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[ES6学习笔记（三）]]></title>
      <url>/2017/07/17/ECMAScript6StudyNotes-03/</url>
      <content type="html"><![CDATA[<h3 id="笔记部分节选自如下书籍"><a href="#笔记部分节选自如下书籍" class="headerlink" title="笔记部分节选自如下书籍"></a>笔记部分节选自如下书籍</h3><p><strong>书名：《ECMAScript 6 入门》</strong></p>
<p><strong>作者：阮一锋</strong></p>
<h3 id="言"><a href="#言" class="headerlink" title="言"></a>言</h3><blockquote>
<p>我用一生手绘红尘<br>只因你要的四季风华</p>
</blockquote>
<hr>
<h3 id="数组的结构赋值"><a href="#数组的结构赋值" class="headerlink" title="数组的结构赋值"></a>数组的结构赋值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line"></div><div class="line"><span class="keyword">let</span> [a, ...b] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">a <span class="comment">// 1</span></div><div class="line">b <span class="comment">// [2, 3]</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> [a, b, ...c] = [<span class="string">'a'</span>]</div><div class="line">a <span class="comment">// "a"</span></div><div class="line">b <span class="comment">// undefined</span></div><div class="line">c <span class="comment">// []</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> [a, [b], d] = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>], <span class="number">4</span>]</div><div class="line">a <span class="comment">// 1</span></div><div class="line">b <span class="comment">// 2</span></div><div class="line">d <span class="comment">// 4</span></div><div class="line"></div><div class="line"><span class="comment">//指定默认值</span></div><div class="line"><span class="keyword">let</span> [x, y = <span class="string">'b'</span>] = [<span class="string">'a'</span>]</div><div class="line"><span class="comment">// x='a', y='b'</span></div><div class="line"></div><div class="line"><span class="comment">//如果默认值是一个表达式，那么这个表达式是惰性求值的，即只有在用到的时候，才会求值。</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//这里不会执行</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'aaa'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">let</span> [x = f()] = [<span class="number">1</span>];</div></pre></td></tr></table></figure>
<h3 id="对象的解构赋值"><a href="#对象的解构赋值" class="headerlink" title="对象的解构赋值"></a>对象的解构赋值</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> &#123; <span class="built_in">bar</span>, foo &#125; = &#123; foo: <span class="string">"aaa"</span>, <span class="built_in">bar</span>: <span class="string">"bbb"</span> &#125;;</div><div class="line">foo <span class="comment">// "aaa"</span></div><div class="line"><span class="built_in">bar</span> <span class="comment">// "bbb"</span></div><div class="line"></div><div class="line"><span class="keyword">let</span> &#123; baz &#125; = &#123; foo: <span class="string">"aaa"</span>, <span class="built_in">bar</span>: <span class="string">"bbb"</span> &#125;;</div><div class="line">baz <span class="comment">// undefined</span></div><div class="line"></div><div class="line"><span class="comment">//对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。</span></div><div class="line"><span class="keyword">let</span> &#123; foo: baz &#125; = &#123; foo: <span class="string">"aaa"</span>, <span class="built_in">bar</span>: <span class="string">"bbb"</span> &#125;;</div><div class="line">baz <span class="comment">// "aaa"</span></div><div class="line">foo <span class="comment">// error: foo is not defined</span></div><div class="line"></div><div class="line"><span class="comment">//JavaScript 引擎会将&#123;x&#125;理解成一个代码块，从而发生语法错误。只有不将大括号写在行首，避免 JavaScript 将其解释为代码块。</span></div><div class="line"><span class="comment">// 正确的写法</span></div><div class="line"><span class="keyword">let</span> x;</div><div class="line">(&#123;x&#125; = &#123;x: <span class="number">1</span>&#125;);</div><div class="line"></div><div class="line"><span class="comment">//将Math对象的对数、正弦、余弦三个方法，赋值到对应的变量上，使用起来就会方便很多。</span></div><div class="line"><span class="keyword">let</span> &#123; <span class="built_in">log</span>, <span class="built_in">sin</span>, <span class="built_in">cos</span> &#125; = Math;</div></pre></td></tr></table></figure>
<h3 id="字符串的解构赋值"><a href="#字符串的解构赋值" class="headerlink" title="字符串的解构赋值"></a>字符串的解构赋值</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">const [a, b, c, d, e] = <span class="string">'hello'</span>;</div><div class="line">a <span class="regexp">//</span> <span class="string">"h"</span></div><div class="line">b <span class="regexp">//</span> <span class="string">"e"</span></div><div class="line">c <span class="regexp">//</span> <span class="string">"l"</span></div><div class="line">d <span class="regexp">//</span> <span class="string">"l"</span></div><div class="line">e <span class="regexp">//</span> <span class="string">"o"</span></div><div class="line"></div><div class="line">let &#123;length : len&#125; = <span class="string">'hello'</span>;</div><div class="line">len <span class="regexp">//</span> <span class="number">5</span></div></pre></td></tr></table></figure>
<h3 id="函数参数的解构赋值"><a href="#函数参数的解构赋值" class="headerlink" title="函数参数的解构赋值"></a>函数参数的解构赋值</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]].<span class="built_in">map</span>(([a, b]) =&gt; a + b);</div><div class="line"><span class="comment">// [ 3, 7 ]</span></div><div class="line"></div><div class="line">function <span class="built_in">move</span>(&#123;x = <span class="number">0</span>, y = <span class="number">0</span>&#125; = &#123;&#125;) &#123;</div><div class="line">  <span class="built_in">return</span> [x, y];</div><div class="line">&#125;</div><div class="line"><span class="built_in">move</span>(&#123;x: <span class="number">3</span>, y: <span class="number">8</span>&#125;); <span class="comment">// [3, 8]</span></div><div class="line"><span class="built_in">move</span>(&#123;x: <span class="number">3</span>&#125;); <span class="comment">// [3, 0]</span></div><div class="line"><span class="built_in">move</span>(&#123;&#125;); <span class="comment">// [0, 0]</span></div><div class="line"><span class="built_in">move</span>(); <span class="comment">// [0, 0]</span></div><div class="line"></div><div class="line">function <span class="built_in">move</span>(&#123;x, y&#125; = &#123; x: <span class="number">0</span>, y: <span class="number">0</span> &#125;) &#123;</div><div class="line">  <span class="built_in">return</span> [x, y];</div><div class="line">&#125;</div><div class="line"><span class="built_in">move</span>(&#123;x: <span class="number">3</span>, y: <span class="number">8</span>&#125;); <span class="comment">// [3, 8]</span></div><div class="line"><span class="built_in">move</span>(&#123;x: <span class="number">3</span>&#125;); <span class="comment">// [3, undefined]</span></div><div class="line"><span class="built_in">move</span>(&#123;&#125;); <span class="comment">// [undefined, undefined]</span></div><div class="line"><span class="built_in">move</span>(); <span class="comment">// [0, 0]</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 摸爬滚打 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ECMAScript6 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ES6学习笔记（二）]]></title>
      <url>/2017/07/13/ECMAScript6StudyNotes-02/</url>
      <content type="html"><![CDATA[<h3 id="笔记部分节选自如下书籍"><a href="#笔记部分节选自如下书籍" class="headerlink" title="笔记部分节选自如下书籍"></a>笔记部分节选自如下书籍</h3><p><strong>书名：《ECMAScript 6 入门》</strong></p>
<p><strong>作者：阮一锋</strong></p>
<h3 id="言"><a href="#言" class="headerlink" title="言"></a>言</h3><blockquote>
<p>任你在全世界妖娆<br>我只在花园里绽放</p>
</blockquote>
<hr>
<h3 id="let-和-const-命令"><a href="#let-和-const-命令" class="headerlink" title="let 和 const 命令"></a>let 和 const 命令</h3><p><strong># for循环</strong></p>
<p>JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量i时，就在上一轮循环的基础上进行计算。（这就是为什么每次重声明变量，还是会累加的原因）</p>
<p>另外，for循环还有一个特别之处，就是设置循环变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域。</p>
<p>栗子如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</div><div class="line">  <span class="keyword">let</span> i = <span class="string">'abc'</span>;</div><div class="line">  <span class="built_in">console</span>.log(i);</div><div class="line">&#125;</div><div class="line"><span class="comment">// abc</span></div><div class="line"><span class="comment">// abc</span></div><div class="line"><span class="comment">// abc</span></div></pre></td></tr></table></figure></p>
<p><strong># let</strong></p>
<ul>
<li>只在代码块内生效</li>
<li>不存在变量提升</li>
<li>不允许重复声明</li>
</ul>
<p><strong># 块级作用域</strong></p>
<p>无块作用域的情况：内层变量可能会覆盖外层变量。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> tmp = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(tmp);</div><div class="line">  <span class="keyword">if</span> (<span class="literal">false</span>) &#123;</div><div class="line">    <span class="keyword">var</span> tmp = <span class="string">'hello world'</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">f(); <span class="comment">// undefined</span></div></pre></td></tr></table></figure></p>
<hr>
<h3 id="2017-07-16-更"><a href="#2017-07-16-更" class="headerlink" title="2017.07.16 更"></a>2017.07.16 更</h3><p><strong># do 表达式</strong><br>待试验</p>
<p><strong># const</strong></p>
<ul>
<li>初始化必赋值</li>
<li>不可改变值</li>
<li>块作用域内生效</li>
</ul>
<p><strong># const值不可改变的本质</strong></p>
<blockquote>
<p>对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指针，const只能保证这个指针是固定的，至于它指向的数据结构是不是可变的，就完全不能控制了。</p>
</blockquote>
<p>如果真的想将对象冻结，应该使用Object.freeze方法。<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> foo = <span class="keyword">Object</span>.freeze(<span class="comment">&#123;&#125;</span>);</div><div class="line"></div><div class="line"><span class="comment">// 常规模式时，下面一行不起作用；</span></div><div class="line"><span class="comment">// 严格模式时，该行会报错</span></div><div class="line">foo.prop = <span class="number">123</span>;</div><div class="line"></div><div class="line"><span class="comment">//以上只冻结对象，但对于对象的属性并无冻结效果。如：</span></div><div class="line"><span class="keyword">const</span> foo = <span class="keyword">Object</span>.freeze(<span class="comment">&#123;a: 1&#125;</span>);</div><div class="line"><span class="comment">//foo的属性a是可以改变值的</span></div><div class="line">foo.a = <span class="number">12</span>;</div></pre></td></tr></table></figure></p>
<p>冻结对象连同属性的方法如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> constantize = <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</div><div class="line">  <span class="built_in">Object</span>.freeze(obj);</div><div class="line">  <span class="built_in">Object</span>.keys(obj).forEach( <span class="function">(<span class="params">key, i</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> ( <span class="keyword">typeof</span> obj[key] === <span class="string">'object'</span> ) &#123;</div><div class="line">      constantize( obj[key] );</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 摸爬滚打 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ECMAScript6 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《送你一匹马》摘要式笔记]]></title>
      <url>/2017/07/12/%E3%80%8A%E9%80%81%E4%BD%A0%E4%B8%80%E5%8C%B9%E9%A9%AC%E3%80%8B%E6%91%98%E8%A6%81%E5%BC%8F%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="书名-nbsp-nbsp-nbsp-nbsp-nbsp-《送你一匹马》"><a href="#书名-nbsp-nbsp-nbsp-nbsp-nbsp-《送你一匹马》" class="headerlink" title="书名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-《送你一匹马》"></a>书名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-《送你一匹马》</h3><h3 id="作者-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-三毛"><a href="#作者-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-三毛" class="headerlink" title="作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;三毛"></a>作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;三毛</h3><h3 id="出版社-nbsp-nbsp-北京十月文艺出版社"><a href="#出版社-nbsp-nbsp-北京十月文艺出版社" class="headerlink" title="出版社&nbsp;-&nbsp;北京十月文艺出版社"></a>出版社&nbsp;-&nbsp;北京十月文艺出版社</h3><p><strong># 爱马</strong></p>
<blockquote>
<p>并不执著于拥有一匹摸得着的骏马，那样就也只有一匹了，这个不够，有了真马，落了实相，不自由，反而怅然若失。</p>
</blockquote>
<p><strong># 梦里不知身是客</strong></p>
<blockquote>
<p>这当然是欺人，却没有法子自欺。</p>
<p>好字触目，却不惊心。</p>
</blockquote>
<p><strong># 野火烧不尽</strong></p>
<blockquote>
<p>一个好农夫，当田就在你面前的时候，你不能再去做梦。</p>
<p>那么有教无类吧，孩子，你的脸上，已经溅到了书本的花瓣，老师，再给你一朵花。</p>
<p>战国之后，才有春秋。</p>
<p>它是值得的，里面没有如果。</p>
<p>书，在生活行事为人上不用出来，便是白读。</p>
<p>春风化雨，谁有事春风？谁又是雨？</p>
<p>学问，是一张渔网，一个结一个结，结出了捕鱼的工具。</p>
<p>但是急流勇退之前的持、守、进、执的坚持仍然有待时间的考验和自我价值的判断与选择。</p>
</blockquote>
<hr>
<h3 id="17-07-13-更"><a href="#17-07-13-更" class="headerlink" title="17.07.13 更"></a>17.07.13 更</h3><p><strong># 野火烧不尽</strong></p>
<blockquote>
<p>田在发芽了，守田的人，你能不能走？</p>
<p>我不戴表，可是我知道已是什么时刻。</p>
<p>但是，当一个发愿做清道夫的人，难道怕衣服脏吗？</p>
</blockquote>
<p><strong># 不觉碧山暮 但闻万壑松</strong></p>
<blockquote>
<p>琢磨，是痛的，我是一块棱棱角角的方砚台，一块好砚，在于它石质的坚美和它润磨出来的墨香，而不是被磨成一个圆球，任人把玩。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 金屋玉颜 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 三毛 </tag>
            
            <tag> 摘要式笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ES6学习笔记（一）]]></title>
      <url>/2017/06/29/ECMAScript6StudyNotes-01/</url>
      <content type="html"><![CDATA[<h3 id="笔记部分节选自如下书籍"><a href="#笔记部分节选自如下书籍" class="headerlink" title="笔记部分节选自如下书籍"></a>笔记部分节选自如下书籍</h3><p><strong>书名：《ECMAScript 6 入门》</strong></p>
<p><strong>作者：阮一锋</strong></p>
<h3 id="言"><a href="#言" class="headerlink" title="言"></a>言</h3><blockquote>
<p>还没能够亲吻你<br>却连发梢，都已触摸不及</p>
</blockquote>
<hr>
<p>ECMAScript 2015 (6th Edition)是目前ECMAScript语言规范的标准。通常被称为”ES6”。<br>而ECMAScript 2017 今年已经确定最终功能集。<br>（如果回到两年前，谁要是再跟我提前端，我就跟谁急。呵，呵）</p>
<p><strong>JavaScript版本列表</strong><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/New_in_JavaScript" target="_blank" rel="external">JavaScript更新</a><br>BTW.Mozilla开发者网络真是个不错的东西</p>
<hr>
<p><strong>检验浏览器ES6支持情况的工具</strong></p>
<p>你可以使用比较标准的站点查看支持情况:<a href="https://kangax.github.io/compat-table/es6/" target="_blank" rel="external">ECMAScript compatibility table</a><br><br></p>
<p>也可以使用傻瓜式的在线测试工具<br><a href="https://ruanyf.github.io/es-checker/index.cn.html" target="_blank" rel="external">你的浏览器支持 ES6 吗？ - ES-Checker</a><br><br></p>
<p>根据傻瓜式分析，现阶段浏览器支持情况如下：</p>
<table>
<thead>
<tr>
<th>浏览器</th>
<th style="text-align:center">支持率</th>
<th style="text-align:center">不支持特性</th>
</tr>
</thead>
<tbody>
<tr>
<td>Edge 40.15063.0.0</td>
<td style="text-align:center"><strong>95%</strong></td>
<td style="text-align:center">模块的export命令/模板的import命令<br>(厉害了，我的Edge)</td>
</tr>
<tr>
<td>Firefox54.0</td>
<td style="text-align:center">90%</td>
<td style="text-align:center">尾调用优化<br>数组的实例方法<br>模块的export命令/模板的import命令</td>
</tr>
<tr>
<td>Chrome58.0.3029.96</td>
<td style="text-align:center">90%</td>
<td style="text-align:center">同上</td>
</tr>
<tr>
<td>IE11</td>
<td style="text-align:center">10%</td>
<td style="text-align:center">不予评论</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 摸爬滚打 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ECMAScript6 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[从搬瓦工服务器到翻墙神器]]></title>
      <url>/2017/06/26/260617-shadowsocks/</url>
      <content type="html"><![CDATA[<h3 id="言"><a href="#言" class="headerlink" title="言"></a>言</h3><blockquote>
<p>其实地上本没有墙<br>人心复杂了，也便有了墙</p>
</blockquote>
<hr>
<ol>
<li>首先你必须拥有一个VPS，建议上<a href="https://bandwagonhost.com/aff.php?aff=16425" target="_blank" rel="external">搬瓦工官网</a>买个最便宜的VPS，如果你只是用来翻墙的话。</li>
<li>如果你买好了，那么进入你的services主页。<br><img src="../../../../img/17062601.jpg" alt=""></li>
<li>点击进入VPS控制面板，如下图：<br><img src="../../../../img/17062602.jpg" alt=""></li>
<li>点击Shadowsocks Server选项，并install。<br><img src="../../../../img/17062603.jpg" alt=""></li>
<li>install成功后，跳转至如下界面，记录下你的server port和server password（可更改）。<br><img src="../../../../img/17062604.jpg" alt=""></li>
<li>下载<a href="http://shadowsocks.org/en/download/clients.html" target="_blank" rel="external">shadowsocks客户端</a>,并安装。</li>
<li>编辑服务器，填入IP、第5步的port和password，并自定义一个代理端口，如23333。<br><img src="../../../../img/17062605.jpg" alt=""></li>
<li>启动shadowsocks，给你需要翻墙的应用设置代理，以火狐为例。<br>选项-&gt;高级-&gt;网络-&gt;连接-&gt;设置<br><img src="../../../../img/17062606.jpg" alt=""><br>手动配置代理，SOCKS主机：localhost，端口：23333。<br><img src="../../../../img/17062607.jpg" alt=""></li>
</ol>
<hr>
<p><strong>恭喜你，你可以尽情去浪了~~~23333333</strong></p>
]]></content>
      
        <categories>
            
            <category> 奇技淫巧 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 搬瓦工 </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS修改SSH端口后的scp与git]]></title>
      <url>/2017/06/23/CentOS%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3%E5%90%8E%E7%9A%84scp%E4%B8%8Egit/</url>
      <content type="html"><![CDATA[<h3 id="言"><a href="#言" class="headerlink" title="言"></a>言</h3><blockquote>
<p>让我们换个姿势相爱<br>以那不为人所熟知的</p>
</blockquote>
<hr>
<p>CentOS默认的SSH端口一般为<strong>20</strong>，网上找的大部分案例也都是使用这个端口。<br>但为了防止有些脚本<em>恶意扫描</em>，建议修改SSH端口，例如：23333。</p>
<p>那么接下来相对应的，scp与git命令也要带上特定的端口，才能正常使用。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#scp</span> -P <span class="number">23333</span> ~/.ssh/id_rsa<span class="selector-class">.pub</span> root@yourserviceIP:~/</div><div class="line"><span class="selector-id">#git</span> clone git@yourserviceIP:<span class="number">23333</span>/home/git/gitosis-admin.git</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 疑难杂症 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> SSH </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[myFirstPost]]></title>
      <url>/2017/06/06/myFirstPost/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/06/06/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[about]]></title>
      <url>/about/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
